<?php

function instance_check()
{
$prod_get = $_GET['$prod_get'];
	$prod_count = count($prod_get);
	for($i=0; $i< $prod_count; $i++)
	{
		$instances_strip_host[$i] = parse_url($prod_get[$i], PHP_URL_HOST);
		$instances_strip_port[$i] = parse_url($prod_get[$i], PHP_URL_PORT);
		
		//Added path variable, and fixed major bug where the app refused to capture a website
		$instances_strip_path[$i] = parse_url($prod_get[$i], PHP_URL_PATH);
		
		//Added path option, to allow changing of test page on config file
		$prod_check[$i] = $instances_strip_host[$i].':'.$instances_strip_port[$i].$instances_strip_path[$i]; 
		url_get($prod_check[$i]);
		$screen_file_extend = $_GET['file'];
		$file_check_md5[$i] = md5_file('./cache/'.$screen_file_extend);
		
		echo $file_check_md5[$i].'<br>';
	}
	;
}

/* Give number of prods are online
*	$prod_count tested and works
*	$prod_count tested and works
*	$instances_strip_host[$i] tested and works
*	$prod_check[$i] tested and works
*	$count_prod tested and works
*/
function instance_keepalive($prod_count)
{
	$prod_get = $prod_count;
	$prod_count = count($prod_get);
	$count_prod = '0';
	
	for($i=0; $i< $prod_count; $i++)
	{
		$instances_strip_host[$i] = parse_url($prod_get[$i], PHP_URL_HOST);
		$instances_strip_port[$i] = parse_url($prod_get[$i], PHP_URL_PORT);
				
		//Added path variable, and fixed major bug where the app refused to capture a website
		$instances_strip_path[$i] = parse_url($prod_get[$i], PHP_URL_PATH);
		
		//Added path option, to allow changing of test page on config file
		$prod_check[$i] = $instances_strip_host[$i].':'.$instances_strip_port[$i].$instances_strip_path[$i]; 
				
	//Validate that the server is online, then give number of online servers
	$fp = @fsockopen($prod_check[$i], -1, $errno, $errstr, 1); //(line 47)
		if ($fp) {
		$count_prod++;		
		}	
	}
echo $count_prod;
}


/* gives all servers online*/

function instance_heartbeat($prod_array)
{
	/*	Establish connection to nodes and check if alive.
	*	Please note that there was a bug fix, where the iterative returned a ':' value.
	*	You need to make the value less then the $prod variable.
	*/
	$prod_get = $prod_array;
	
	$prod_count = count($prod_get);
	
	//Fixed major bug, whereby $i<= $prod_count, this caused the for loop to have an extra iterative
	for($i=0; $i< $prod_count; $i++)
	{
		$instances_strip_host[$i] = parse_url($prod_get[$i], PHP_URL_HOST);
		$instances_strip_port[$i] = parse_url($prod_get[$i], PHP_URL_PORT);

		$prod_check[$i] = $instances_strip_host[$i].':'.$instances_strip_port[$i]; 

		$fp = @fsockopen($prod_check[$i], -1, $errno, $errstr, 1); //(line 47)
		if (!$fp) {
		echo "$prod_check[$i] failed instance <br>";
		
		}	
		
		$fp = @fsockopen($prod_check[$i], -1, $errno, $errstr, 1); //(line 47)
		if ($fp) {
			$i_s = $i + 1;
		echo 'server'."[$i_s]".' is up, HELLO!!'."</br>";
		$_GET['server_status']	= $i_s;
		
		}		

	};
	
	}

function PROD_INSTANCES($prod_instances)
{
$url_get = $prod_instances;

$prod_get = $url_get;
	$prod_count = count($prod_get);
	for($i=0; $i< $prod_count; $i++)
	{
		$instances_strip_host[$i] = parse_url($prod_get[$i], PHP_URL_HOST);
		$instances_strip_port[$i] = parse_url($prod_get[$i], PHP_URL_PORT);
		
		//Added path variable, and fixed major bug where the app refused to capture a website
		$instances_strip_path[$i] = parse_url($prod_get[$i], PHP_URL_PATH);
		
		//Added path option, to allow changing of test page on config file
		$prod_check[$i] = $instances_strip_host[$i].':'.$instances_strip_port[$i].$instances_strip_path[$i]; 
		
		URL_GET($prod_check[$i]);
		
		//Log to DB
		$getfile = $_GET['file'];
		$getjob = $_GET['job'];
		$md5_file = md5_file('C:'.DIRECTORY_SEPARATOR.'wamp_new'.DIRECTORY_SEPARATOR.'www'.DIRECTORY_SEPARATOR.'en_kosi_alpha'.DIRECTORY_SEPARATOR.'cache'. DIRECTORY_SEPARATOR.$getfile);
		$date_file = date('Y-m-d');
		$time_file = date('H:i:s', time() - date('Z'));


		$data = Array ("id" => "",
               "host" 		=> $prod_check[$i],
               "time" 		=> $time_file,
               "state" 		=> 'up',
               "date" 		=> $date_file,
               "hash" 		=> $md5_file,
               "job" 		=> $getjob,
               "file_name"	=> $getfile
					);

		$id = $db->insert ('health_inst', $data);
		if($id)
    		{
    			echo 'user was created. Id=' . $id;
    			
    				}

	}
;}

?>